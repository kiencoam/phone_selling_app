{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../../services/auth.service';\n\n// Thunk để login\nexport const login = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(email, password);\n    localStorage.setItem('token', response.token);\n    return response.user;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Đăng nhập thất bại');\n  }\n});\n\n// Thunk để register\nexport const register = createAsyncThunk('auth/register', async ({\n  name,\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.register(name, email, password);\n    localStorage.setItem('token', response.token);\n    return response.user;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Đăng ký thất bại');\n  }\n});\n\n// Thunk để logout\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n  localStorage.removeItem('token');\n});\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login cases\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Register cases\n    .addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Logout cases\n    .addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    });\n  }\n});\nexport const {\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","login","email","password","rejectWithValue","response","localStorage","setItem","token","user","error","_error$response","_error$response$data","data","message","register","name","_error$response2","_error$response2$data","logout","removeItem","initialState","getItem","isAuthenticated","loading","authSlice","reducers","clearError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/GIGABYTE/Documents/phone_selling_app/frontend/User/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from '../../services/auth.service';\r\n\r\n// Thunk để login\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      localStorage.setItem('token', response.token);\r\n      return response.user;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Đăng nhập thất bại');\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk để register\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async ({ name, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.register(name, email, password);\r\n      localStorage.setItem('token', response.token);\r\n      return response.user;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || 'Đăng ký thất bại');\r\n    }\r\n  }\r\n);\r\n\r\n// Thunk để logout\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  async () => {\r\n    await authService.logout();\r\n    localStorage.removeItem('token');\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token') || null,\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login cases\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Register cases\r\n      .addCase(register.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Logout cases\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n        state.isAuthenticated = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}