{"ast":null,"code":"import axios from 'axios';\nimport { API_CONFIG } from '../constants/api';\n\n// API base URL\nconst API_BASE_URL = API_CONFIG.BASE_URL;\n\n// Tạo axios instance riêng cho auth service\nconst authClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: API_CONFIG.TIMEOUT // 10 seconds timeout\n});\n\n// Add request interceptor for auth token\nauthClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  console.log(`[Auth Request] ${config.method.toUpperCase()} ${config.url}`, {\n    hasToken: !!token\n  });\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('[Auth Request Error]', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\nauthClient.interceptors.response.use(response => {\n  console.log(`[Auth Response] ${response.config.method.toUpperCase()} ${response.config.url}`, {\n    status: response.status\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config$method, _error$config2, _error$response;\n  console.error(`[Auth Error] ${((_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$method = _error$config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()) || 'UNKNOWN'} ${((_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url) || 'unknown'}`, {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message\n  });\n\n  // Handle 401 Unauthorized errors\n  if (error.response && error.response.status === 401) {\n    // Clear local storage\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n\n    // Kiểm tra nếu đang ở trang yêu cầu xác thực\n    const protectedRoutes = ['/cart', '/checkout', '/profile', '/orders'];\n    const currentPath = window.location.pathname;\n    if (protectedRoutes.some(route => currentPath.startsWith(route))) {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport class AuthService {\n  /**\r\n   * Đăng nhập người dùng\r\n   * @param {string} email - Email đăng nhập\r\n   * @param {string} password - Mật khẩu\r\n   * @returns {Promise<Object>} Thông tin người dùng kèm token\r\n   */\n  static async login(email, password) {\n    try {\n      const response = await authClient.post(API_CONFIG.ENDPOINTS.LOGIN, {\n        email,\n        password\n      });\n\n      // Lưu token vào localStorage\n      localStorage.setItem('authToken', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      console.log('[Auth] Login successful', {\n        user: response.data.user.email\n      });\n      return response.data.user;\n    } catch (error) {\n      console.error('[Auth] Login error:', error);\n      throw error;\n    }\n  }\n\n  /**\r\n   * Đăng ký người dùng mới\r\n   * @param {Object} userData - Thông tin người dùng\r\n   * @returns {Promise<Object>} Thông tin người dùng đã đăng ký\r\n   */\n  static async register(userData) {\n    try {\n      const response = await authClient.post(API_CONFIG.ENDPOINTS.REGISTER, userData);\n      console.log('[Auth] Registration successful', {\n        user: userData.email\n      });\n      return response.data;\n    } catch (error) {\n      console.error('[Auth] Registration error:', error);\n      throw error;\n    }\n  }\n\n  /**\r\n   * Đăng xuất người dùng\r\n   * @returns {Promise<void>}\r\n   */\n  static async logout() {\n    try {\n      await authClient.post(API_CONFIG.ENDPOINTS.LOGOUT);\n\n      // Xóa thông tin đăng nhập\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('user');\n      console.log('[Auth] Logout successful');\n    } catch (error) {\n      console.error('[Auth] Logout error:', error);\n      // Vẫn xóa thông tin đăng nhập nếu có lỗi\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('user');\n      throw error;\n    }\n  }\n\n  /**\r\n   * Lấy thông tin người dùng hiện tại\r\n   * @returns {Promise<Object>} Thông tin người dùng\r\n   */\n  static async fetchUserProfile() {\n    try {\n      const response = await authClient.get(API_CONFIG.ENDPOINTS.PROFILE);\n      console.log('[Auth] Fetch user profile successful', {\n        userId: response.data.id\n      });\n      return response.data;\n    } catch (error) {\n      console.error('[Auth] Fetch user profile error:', error);\n\n      // Fallback để đảm bảo ứng dụng không bị crash\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        return JSON.parse(userData);\n      }\n      throw error;\n    }\n  }\n\n  /**\r\n   * Cập nhật thông tin người dùng\r\n   * @param {Object} userData - Thông tin cần cập nhật\r\n   * @returns {Promise<Object>} Thông tin người dùng đã cập nhật\r\n   */\n  static async updateUserProfile(userData) {\n    try {\n      const response = await authClient.put(API_CONFIG.ENDPOINTS.PROFILE, userData);\n\n      // Cập nhật thông tin user trong localStorage\n      const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n      const updatedUser = {\n        ...currentUser,\n        ...response.data\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      console.log('[Auth] Update user profile successful', {\n        userId: updatedUser.id\n      });\n      return updatedUser;\n    } catch (error) {\n      console.error('[Auth] Update user profile error:', error);\n      throw error;\n    }\n  }\n}","map":{"version":3,"names":["axios","API_CONFIG","API_BASE_URL","BASE_URL","authClient","create","baseURL","headers","timeout","TIMEOUT","interceptors","request","use","config","token","localStorage","getItem","console","log","method","toUpperCase","url","hasToken","Authorization","error","Promise","reject","response","status","_error$config","_error$config$method","_error$config2","_error$response","message","removeItem","protectedRoutes","currentPath","window","location","pathname","some","route","startsWith","href","AuthService","login","email","password","post","ENDPOINTS","LOGIN","setItem","data","JSON","stringify","user","register","userData","REGISTER","logout","LOGOUT","fetchUserProfile","get","PROFILE","userId","id","parse","updateUserProfile","put","currentUser","updatedUser"],"sources":["C:/Users/GIGABYTE/Documents/phone_selling_app/frontend/User/src/services/auth.service.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_CONFIG } from '../constants/api';\r\n\r\n// API base URL\r\nconst API_BASE_URL = API_CONFIG.BASE_URL;\r\n\r\n// Tạo axios instance riêng cho auth service\r\nconst authClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: API_CONFIG.TIMEOUT, // 10 seconds timeout\r\n});\r\n\r\n// Add request interceptor for auth token\r\nauthClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    console.log(`[Auth Request] ${config.method.toUpperCase()} ${config.url}`, {\r\n      hasToken: !!token,\r\n    });\r\n    \r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('[Auth Request Error]', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling\r\nauthClient.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`[Auth Response] ${response.config.method.toUpperCase()} ${response.config.url}`, {\r\n      status: response.status,\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(`[Auth Error] ${error.config?.method?.toUpperCase() || 'UNKNOWN'} ${error.config?.url || 'unknown'}`, {\r\n      status: error.response?.status,\r\n      message: error.message,\r\n    });\r\n    \r\n    // Handle 401 Unauthorized errors\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear local storage\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      \r\n      // Kiểm tra nếu đang ở trang yêu cầu xác thực\r\n      const protectedRoutes = ['/cart', '/checkout', '/profile', '/orders'];\r\n      const currentPath = window.location.pathname;\r\n      \r\n      if (protectedRoutes.some(route => currentPath.startsWith(route))) {\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport class AuthService {\r\n  /**\r\n   * Đăng nhập người dùng\r\n   * @param {string} email - Email đăng nhập\r\n   * @param {string} password - Mật khẩu\r\n   * @returns {Promise<Object>} Thông tin người dùng kèm token\r\n   */\r\n  static async login(email, password) {\r\n    try {\r\n      const response = await authClient.post(API_CONFIG.ENDPOINTS.LOGIN, { email, password });\r\n      \r\n      // Lưu token vào localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      \r\n      console.log('[Auth] Login successful', { user: response.data.user.email });\r\n      return response.data.user;\r\n    } catch (error) {\r\n      console.error('[Auth] Login error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Đăng ký người dùng mới\r\n   * @param {Object} userData - Thông tin người dùng\r\n   * @returns {Promise<Object>} Thông tin người dùng đã đăng ký\r\n   */\r\n  static async register(userData) {\r\n    try {\r\n      const response = await authClient.post(API_CONFIG.ENDPOINTS.REGISTER, userData);\r\n      console.log('[Auth] Registration successful', { user: userData.email });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('[Auth] Registration error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Đăng xuất người dùng\r\n   * @returns {Promise<void>}\r\n   */\r\n  static async logout() {\r\n    try {\r\n      await authClient.post(API_CONFIG.ENDPOINTS.LOGOUT);\r\n      \r\n      // Xóa thông tin đăng nhập\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      \r\n      console.log('[Auth] Logout successful');\r\n    } catch (error) {\r\n      console.error('[Auth] Logout error:', error);\r\n      // Vẫn xóa thông tin đăng nhập nếu có lỗi\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lấy thông tin người dùng hiện tại\r\n   * @returns {Promise<Object>} Thông tin người dùng\r\n   */\r\n  static async fetchUserProfile() {\r\n    try {\r\n      const response = await authClient.get(API_CONFIG.ENDPOINTS.PROFILE);\r\n      console.log('[Auth] Fetch user profile successful', { userId: response.data.id });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('[Auth] Fetch user profile error:', error);\r\n      \r\n      // Fallback để đảm bảo ứng dụng không bị crash\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        return JSON.parse(userData);\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cập nhật thông tin người dùng\r\n   * @param {Object} userData - Thông tin cần cập nhật\r\n   * @returns {Promise<Object>} Thông tin người dùng đã cập nhật\r\n   */\r\n  static async updateUserProfile(userData) {\r\n    try {\r\n      const response = await authClient.put(API_CONFIG.ENDPOINTS.PROFILE, userData);\r\n      \r\n      // Cập nhật thông tin user trong localStorage\r\n      const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n      const updatedUser = { ...currentUser, ...response.data };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      console.log('[Auth] Update user profile successful', { userId: updatedUser.id });\r\n      return updatedUser;\r\n    } catch (error) {\r\n      console.error('[Auth] Update user profile error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}