{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIGABYTE\\\\Documents\\\\phone_selling_app\\\\frontend\\\\User\\\\src\\\\contexts\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { ApiService } from '../services/api';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useLocalStorage('cartItems', []);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [itemCount, setItemCount] = useState(0);\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n\n  // Tải giỏ hàng từ API khi người dùng đăng nhập\n  useEffect(() => {\n    const fetchCart = async () => {\n      if (isAuthenticated && user) {\n        setLoading(true);\n        try {\n          const userCart = await ApiService.getCart();\n          if (userCart && userCart.items) {\n            setCartItems(userCart.items);\n          }\n        } catch (err) {\n          console.error('Failed to fetch cart:', err);\n          setError('Không thể tải giỏ hàng. Vui lòng thử lại sau.');\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchCart();\n  }, [isAuthenticated, user, setCartItems]);\n\n  // Calculate totals whenever cart items change\n  useEffect(() => {\n    const calculateTotals = () => {\n      const itemTotal = cartItems.reduce((total, item) => {\n        const price = item.discountPrice || item.price;\n        return total + price * item.quantity;\n      }, 0);\n      const count = cartItems.reduce((count, item) => count + item.quantity, 0);\n      setTotal(itemTotal);\n      setItemCount(count);\n    };\n    calculateTotals();\n  }, [cartItems]);\n  const requireAuth = () => {\n    if (!isAuthenticated) {\n      throw new Error('Bạn cần đăng nhập để thực hiện hành động này');\n    }\n  };\n  const addToCart = async (product, quantity = 1) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Kiểm tra xác thực\n      requireAuth();\n\n      // Call API (in a real app)\n      await ApiService.addToCart(product.id, quantity);\n\n      // Update local state\n      setCartItems(prevItems => {\n        // Check if the product is already in the cart\n        const existingItemIndex = prevItems.findIndex(item => item.id === product.id);\n        if (existingItemIndex >= 0) {\n          // Product exists, update quantity\n          const updatedItems = [...prevItems];\n          updatedItems[existingItemIndex] = {\n            ...updatedItems[existingItemIndex],\n            quantity: updatedItems[existingItemIndex].quantity + quantity\n          };\n          return updatedItems;\n        } else {\n          // Product doesn't exist, add new item\n          return [...prevItems, {\n            ...product,\n            quantity\n          }];\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Add to cart error:', err);\n      setError(err.message || 'Failed to add item to cart');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateCartItemQuantity = (productId, quantity) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Kiểm tra xác thực\n      requireAuth();\n      if (quantity <= 0) {\n        // If quantity is zero or negative, remove the item\n        removeFromCart(productId);\n      } else {\n        // Update quantity\n        setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n          ...item,\n          quantity\n        } : item));\n      }\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Update cart quantity error:', err);\n      setError(err.message || 'Failed to update cart');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeFromCart = productId => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Kiểm tra xác thực\n      requireAuth();\n      setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Remove from cart error:', err);\n      setError(err.message || 'Failed to remove item from cart');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearCart = () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Kiểm tra xác thực\n      requireAuth();\n      setCartItems([]);\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Clear cart error:', err);\n      setError(err.message || 'Failed to clear cart');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    cart: {\n      items: cartItems,\n      total,\n      itemCount\n    },\n    loading,\n    error,\n    addToCart,\n    updateCartItemQuantity,\n    removeFromCart,\n    clearCart,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"Uuvgs9iQg183wndcFxeXT61cPuY=\", false, function () {\n  return [useLocalStorage, useAuth];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useLocalStorage","ApiService","useAuth","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","loading","setLoading","error","setError","total","setTotal","itemCount","setItemCount","isAuthenticated","user","fetchCart","userCart","getCart","items","err","console","calculateTotals","itemTotal","reduce","item","price","discountPrice","quantity","count","requireAuth","Error","addToCart","product","id","prevItems","existingItemIndex","findIndex","updatedItems","success","message","updateCartItemQuantity","productId","removeFromCart","map","filter","clearCart","value","cart","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GIGABYTE/Documents/phone_selling_app/frontend/User/src/contexts/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { ApiService } from '../services/api';\r\nimport { useAuth } from './AuthContext';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useLocalStorage('cartItems', []);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [total, setTotal] = useState(0);\r\n  const [itemCount, setItemCount] = useState(0);\r\n  const { isAuthenticated, user } = useAuth();\r\n\r\n  // Tải giỏ hàng từ API khi người dùng đăng nhập\r\n  useEffect(() => {\r\n    const fetchCart = async () => {\r\n      if (isAuthenticated && user) {\r\n        setLoading(true);\r\n        try {\r\n          const userCart = await ApiService.getCart();\r\n          if (userCart && userCart.items) {\r\n            setCartItems(userCart.items);\r\n          }\r\n        } catch (err) {\r\n          console.error('Failed to fetch cart:', err);\r\n          setError('Không thể tải giỏ hàng. Vui lòng thử lại sau.');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCart();\r\n  }, [isAuthenticated, user, setCartItems]);\r\n\r\n  // Calculate totals whenever cart items change\r\n  useEffect(() => {\r\n    const calculateTotals = () => {\r\n      const itemTotal = cartItems.reduce((total, item) => {\r\n        const price = item.discountPrice || item.price;\r\n        return total + price * item.quantity;\r\n      }, 0);\r\n      \r\n      const count = cartItems.reduce((count, item) => count + item.quantity, 0);\r\n      \r\n      setTotal(itemTotal);\r\n      setItemCount(count);\r\n    };\r\n    \r\n    calculateTotals();\r\n  }, [cartItems]);\r\n\r\n  const requireAuth = () => {\r\n    if (!isAuthenticated) {\r\n      throw new Error('Bạn cần đăng nhập để thực hiện hành động này');\r\n    }\r\n  };\r\n\r\n  const addToCart = async (product, quantity = 1) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Kiểm tra xác thực\r\n      requireAuth();\r\n      \r\n      // Call API (in a real app)\r\n      await ApiService.addToCart(product.id, quantity);\r\n      \r\n      // Update local state\r\n      setCartItems(prevItems => {\r\n        // Check if the product is already in the cart\r\n        const existingItemIndex = prevItems.findIndex(item => item.id === product.id);\r\n        \r\n        if (existingItemIndex >= 0) {\r\n          // Product exists, update quantity\r\n          const updatedItems = [...prevItems];\r\n          updatedItems[existingItemIndex] = {\r\n            ...updatedItems[existingItemIndex],\r\n            quantity: updatedItems[existingItemIndex].quantity + quantity\r\n          };\r\n          return updatedItems;\r\n        } else {\r\n          // Product doesn't exist, add new item\r\n          return [...prevItems, { ...product, quantity }];\r\n        }\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Add to cart error:', err);\r\n      setError(err.message || 'Failed to add item to cart');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateCartItemQuantity = (productId, quantity) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Kiểm tra xác thực\r\n      requireAuth();\r\n      \r\n      if (quantity <= 0) {\r\n        // If quantity is zero or negative, remove the item\r\n        removeFromCart(productId);\r\n      } else {\r\n        // Update quantity\r\n        setCartItems(prevItems => \r\n          prevItems.map(item => \r\n            item.id === productId ? { ...item, quantity } : item\r\n          )\r\n        );\r\n      }\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Update cart quantity error:', err);\r\n      setError(err.message || 'Failed to update cart');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Kiểm tra xác thực\r\n      requireAuth();\r\n      \r\n      setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Remove from cart error:', err);\r\n      setError(err.message || 'Failed to remove item from cart');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Kiểm tra xác thực\r\n      requireAuth();\r\n      \r\n      setCartItems([]);\r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Clear cart error:', err);\r\n      setError(err.message || 'Failed to clear cart');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    cart: {\r\n      items: cartItems,\r\n      total,\r\n      itemCount,\r\n    },\r\n    loading,\r\n    error,\r\n    addToCart,\r\n    updateCartItemQuantity,\r\n    removeFromCart,\r\n    clearCart,\r\n    isAuthenticated\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}